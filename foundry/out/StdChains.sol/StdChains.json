{"abi":[],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"StdChains provides information about EVM compatible chains that can be used in scripts/tests. For each chain, the chain's name, chain ID, and a default RPC URL are provided. Chains are identified by their alias, which is the same as the alias in the `[rpc_endpoints]` section of the `foundry.toml` file. For best UX, ensure the alias in the `foundry.toml` file match the alias used in this contract, which can be found as the first argument to the `setChainWithDefaultRpcUrl` call in the `initializeStdChains` function. There are two main ways to use this contract:   1. Set a chain with `setChain(string memory chainAlias, ChainData memory chain)` or      `setChain(string memory chainAlias, Chain memory chain)`   2. Get a chain with `getChain(string memory chainAlias)` or `getChain(uint256 chainId)`. The first time either of those are used, chains are initialized with the default set of RPC URLs. This is done in `initializeStdChains`, which uses `setChainWithDefaultRpcUrl`. Defaults are recorded in `defaultRpcUrls`. The `setChain` function is straightforward, and it simply saves off the given chain data. The `getChain` methods use `getChainWithUpdatedRpcUrl` to return a chain. For example, let's say we want to retrieve the RPC URL for `mainnet`:   - If you have specified data with `setChain`, it will return that.   - If you have configured a mainnet RPC URL in `foundry.toml`, it will return the URL, provided it     is valid (e.g. a URL is specified, or an environment variable is given and exists).   - If neither of the above conditions is met, the default data is returned. Summarizing the above, the prioritization hierarchy is `setChain` -> `foundry.toml` -> environment variable -> defaults.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/StdChains.sol\":\"StdChains\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0xb20ceb4143471b7bc922ae005be2840b3306014e4c3fff91a2a6e01386f843c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2e63a21567d96f763ee995490b0b19fb91e8ba50ffe1187a7dff37db917df8dc\",\"dweb:/ipfs/QmTkwz2nrMz11MiNuW55e1bUvrVrSy8XFkUVxdm4wFUC6o\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x3f8ad2259492190640bfe403ca3e9f22f8864483e5d6233f00f57cad08a4496f\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://4751bb2da66160bad30a1b099126a63e666372cfed8d6c52ae2dae24822063ec\",\"dweb:/ipfs/QmbndTLAzi432FXbL6NiwjxKTkCrBftXhCfPsfJ8aZiGR4\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.25+commit.b61c2a91"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/=lib/openzeppelin-contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/forge-std/src/StdChains.sol":"StdChains"},"evmVersion":"paris","libraries":{}},"sources":{"lib/forge-std/src/StdChains.sol":{"keccak256":"0xb20ceb4143471b7bc922ae005be2840b3306014e4c3fff91a2a6e01386f843c4","urls":["bzz-raw://2e63a21567d96f763ee995490b0b19fb91e8ba50ffe1187a7dff37db917df8dc","dweb:/ipfs/QmTkwz2nrMz11MiNuW55e1bUvrVrSy8XFkUVxdm4wFUC6o"],"license":"MIT"},"lib/forge-std/src/Vm.sol":{"keccak256":"0x3f8ad2259492190640bfe403ca3e9f22f8864483e5d6233f00f57cad08a4496f","urls":["bzz-raw://4751bb2da66160bad30a1b099126a63e666372cfed8d6c52ae2dae24822063ec","dweb:/ipfs/QmbndTLAzi432FXbL6NiwjxKTkCrBftXhCfPsfJ8aZiGR4"],"license":"MIT OR Apache-2.0"}},"version":1},"id":3}